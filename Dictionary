namespace HashTable
{
    public class StringsDictionary
    {
        private const int InitialSize = 10;

        private LinkedList[] _buckets = new LinkedList[InitialSize];

        public void Add(string key, string value)
        {
            var pair = new KeyValuePair(key, value);
            var hash = CalculateHash(pair.Key);
            if (_buckets[hash] == null)
            {
                _buckets[hash] = new LinkedList();
            }
            _buckets[hash].Add(pair);
        }

        public void Remove(string key)
        {
            var hash = CalculateHash(key);
            _buckets[hash].RemoveByKey(key);
        }

        public string Get(string key)
        {
            var hash = CalculateHash(key);
            string value = _buckets[hash].GetItemWithKey(key).Value;
            return value;
        }


        public static int CalculateHash(string key)
        {
            int total = 0;
            foreach (var letter in key)
            {
                total = (total * 17 + letter) % 10;
            }
            return total;
        }
    }
}
